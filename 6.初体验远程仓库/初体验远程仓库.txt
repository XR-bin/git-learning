1、添加仓库地址

- 接下来，要使用 `git` 上传代码了
- 我们先要告诉 `git` 上传到哪里
- 也就是给 `git` 添加一个上传的地址
- 我们还是来到我们的项目文件夹
- 使用 `git remote add origin 仓库地址` 来添加
    - remote：远程的意思
    - add：添加的意思
    - origin：是一个变量名（就是指代后面一长串的地址）

- 如果仓库地址写错可以通过一下命令撤回，然后自己再重新添加
    - git remote remove origin
    - 注意：origin：是一个变量名（就是指代后面一长串的地址）

- 通过 git remote -v 可以查看这个push的地址



2、上传代码到远程仓库
- 接下来就是上传内容了
    - 上传要保证 **历史区** 里面有内容
    - 上传的过程会把 **历史区** 里面所有的内容上传到远端

- 我们使用 `git push` 指令来上传
    - git push -u origin master
    - 表示把内容上传到 origin 这个地址
    - master 是上传到远程的 master 分支
    - -u表示以后所有git push操作都是origin master为基础(即下次上传直接写git push就行)

    - git push



3、拉拽远端仓库代码
- 当人家的代码更新以后，你想获得最新的代码
- 我们不需要从新克隆
- 只要拉取一次代码就可以了
- 直接在项目文件夹里面使用指令下拉

    - git pull -u origin master
    - 表示把内容上传到 origin 这个地址
    - master 是上传到远程的 master 分支
    - -u表示以后所有git pull操作都是origin master为基础(即下次上传直接写git pull就行)

    - 如果之前有写过 -u origin master 就直接用下面指令就行
    - git pull 

- 这样一来，你本地的仓库就可远程的仓库同步了

- 注意：git pull有合并作用(即远端的和本地的git记录合并)，如何用合并冲突就和之前讲过的合并冲突一样处理



4、克隆远端代码库
- 当我们新接收工作时，是需要下载一份总支线代码的
    - git clone 仓库地址

- `git` 克隆是指把远程仓库里面的内容克隆一份到本地
- 可以克隆别人的 **公开** 的仓库，也可以克隆自己的仓库
- 克隆别人的仓库，我们只能拿下来用，修改后不能从新上传
- 克隆自己的仓库，我们修改后还可以再次上传更新



5、团队合作开发注意事项

    - 1.在接手新工作加入团队开发时，用git clone 指令克隆下来整个项目，
        此时是无法git push上去的，必须要得到管理员权限
    
    - 2.千万不能用 git reset 回退到比远端仓库代码版本还低的版本，这样无法git push上去的。
        必须使用git revert

    - 3.尽力少用git push -f方式推送，-f表示强行推送。除非特殊情况，否则尽力少用


